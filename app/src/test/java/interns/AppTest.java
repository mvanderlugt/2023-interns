/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package interns;

import org.junit.jupiter.api.Test;
import org.testcontainers.containers.PostgreSQLContainer;
import org.testcontainers.junit.jupiter.Container;
import org.testcontainers.junit.jupiter.Testcontainers;

import java.sql.SQLException;
import java.util.List;

import static org.hamcrest.CoreMatchers.hasItem;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.empty;
import static org.hamcrest.Matchers.hasSize;
import static org.hamcrest.core.Is.is;
import static org.junit.jupiter.api.Assertions.assertNotNull;

@Testcontainers
class AppTest {
    @Container
    public PostgreSQLContainer postgres = new PostgreSQLContainer<>("postgres:latest");

    @Test
    void appHasAGreeting() {
        App app = new App(new ConnectionManager());
        assertNotNull(app.getGreeting(), "app should have a greeting");
    }

    @Test
    void canGetJdbcConnection() throws SQLException {
        ConnectionManager manager = new ConnectionManager(postgres.getJdbcUrl(), postgres.getUsername(), postgres.getPassword());
        try {
            assertNotNull(manager.getConnection());
        } finally {
            manager.close();
        }
    }

    @Test
    void canGetTables() throws SQLException {
        App app = new App(new ConnectionManager(postgres.getJdbcUrl(), postgres.getUsername(), postgres.getPassword()));
        List<String> tables = app.getTables();
        assertThat(tables, is(empty()));
        for (String table : tables) {
            System.out.println(table);
        }
    }

    @Test
    void canCreateTables() throws SQLException {
        App app = new App(new ConnectionManager(postgres.getJdbcUrl(), postgres.getUsername(), postgres.getPassword()));
        app.createTables();
        assertThat(app.getTables(), hasItem("suppliers"));
    }

    @Test
    void canCreateSupplier() throws SQLException {
        App app = new App(new ConnectionManager(postgres.getJdbcUrl(), postgres.getUsername(), postgres.getPassword()));
        app.createTables();
        Supplier supplier = new Supplier("Hatem's Fun Factory", "123 Easy St", "Cabo", "TX", "78945");
        assertThat(app.createSupplier(supplier), is(true));
    }

    @Test
    void canGetSuppliers() throws SQLException {
        App app = new App(new ConnectionManager(postgres.getJdbcUrl(), postgres.getUsername(), postgres.getPassword()));
        app.createTables();
        app.createSupplier(new Supplier("Hatem's Fun Factory", "123 Easy St", "Cabo", "TX", "78945"));
        List<Supplier> suppliers = app.getSuppliers();
        for(Supplier supplier : suppliers) {
            System.out.println(supplier);
        }
        assertThat(suppliers, hasSize(1));
    }
}
